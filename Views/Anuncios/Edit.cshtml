@model Wallaboo.Entities.Anuncio

@{
    ViewData["Title"] = "Edita tu anuncio";
}

<div class="text-center mb-4">
    <h2>Edita tu anuncio</h2>
    <hr />
</div>

@if (User.Identity is not null && User.Identity.IsAuthenticated)
{
    <div class="container d-flex justify-content-center">
        <div class="col-md-8">
            <h5 class="alert text-danger">@ViewBag.Msg</h5>
            <form asp-action="Edit" enctype="multipart/form-data" class="mt-4">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="TenantId" />

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="Descripcion" class="form-label"></label>
                    </div>
                    <div class="col-md-8">
                        @Html.TextArea("Descripcion", Model.Descripcion, new { @class = "form-control" })
                        <span asp-validation-for="Descripcion" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="FechaDesde" class="form-label"></label>
                    </div>
                    <div class="col-md-4">
                        <input asp-for="FechaDesde" class="form-control" />
                        <span asp-validation-for="FechaDesde" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="FechaHasta" class="form-label"></label>
                    </div>
                    <div class="col-md-4">
                        <input asp-for="FechaHasta" class="form-control" />
                        <span asp-validation-for="FechaHasta" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="Precio" class="form-label">$:</label>
                    </div>
                    <div class="col-md-8">
                        <input asp-for="Precio" class="form-control" />
                        <span asp-validation-for="Precio" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label asp-for="CantidadDias" class="form-label"></label>
                    </div>
                    <div class="col-md-8">
                        <input asp-for="CantidadDias" class="form-control" readonly="readonly" />
                        <span asp-validation-for="CantidadDias" class="text-danger"></span>
                    </div>
                </div>

                <!-- Campo para mostrar la imagen actual -->
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label>Imagen actual:</label>
                    </div>
                    <div class="col-md-8">
                        @if (Model.Imagenes != null && Model.Imagenes.Any())
                        {
                            foreach (var imagen in Model.Imagenes)
                            {
                                var fileName = System.IO.Path.GetFileName(imagen.Image1Path);
                                var relativePath = Url.Content($"~/uploads/{imagen.TenantId}/{fileName}");
                                <div>
                                    <img src="@relativePath" alt="Imagen del anuncio" style="width: 150px; height: 150px;" />
                                </div>
                            }
                        }
                        else
                        {
                            <span>No hay imagen disponible</span>
                        }
                    </div>
                </div>

                <!-- Campo para subir nuevas imágenes -->
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label for="Imagenes" class="form-label">Nueva imagen:</label>
                    </div>
                    <div class="col-md-8">
                        <input type="file" id="Imagenes" name="Imagenes" class="form-control" accept="image/*" multiple />
                        @* <small class="form-text text-muted">Puedes subir múltiples imágenes.</small> *@
                    </div>
                </div>

                <!-- Área para mostrar la vista previa de la nueva imagen -->
                <div class="row mb-3">
                    <div class="col-md-4">
                        <label>Vista previa:</label>
                    </div>
                    <div class="col-md-8" id="preview-container">
                        <!-- Aquí se mostrará la vista previa de la imagen -->
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6 text-center">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                    </div>
                    <div class="col-md-6 text-center">
                        <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
}
else
{
    <div class="text-center">
        <h3>¡Inicia sesión para poder crear y visualizar anuncios!</h3>
    </div>
}

@section Scripts {
    @Html.RenderPartialAsync("_ValidationScriptsPartial");
    <script>
        // Función para mostrar la vista previa de la imagen seleccionada
        document.getElementById("Imagenes").addEventListener("change", function (event) {
            const previewContainer = document.getElementById("preview-container");
            previewContainer.innerHTML = ""; // Limpiar contenido anterior

            const files = event.target.files; // Obtener archivos seleccionados
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = document.createElement("img");
                    img.src = e.target.result; // Establecer la fuente de la imagen
                    img.style.width = "150px"; // Ancho de la imagen
                    img.style.height = "150px"; // Alto de la imagen
                    previewContainer.appendChild(img); // Agregar la imagen al contenedor de vista previa
                };
                reader.readAsDataURL(file); // Leer la imagen como URL
            }
        });
    </script>
}
